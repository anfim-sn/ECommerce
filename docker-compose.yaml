version: '3.8'
name: ecommerce
services:
  postgres:
    image: postgres:15.6
    ports:
      - "5432:5432"
    volumes:
      - ./local/postgresql:/var/lib/postgresql/data
      - ./local/postgresql/init:/docker-entrypoint-initdb.d
    environment:
      PGDATA: /var/lib/postgresql/data/ecommerce/
      POSTGRES_DB: ecommerce
      POSTGRES_USER: db
      POSTGRES_PASSWORD: 1234
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db -d ecommerce" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce
      
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./src/ordersdb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - ecommerce
  
  product-service:
    image: anfim/ecommerce-products:v1.0
    ports:
      - "8080:8080"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: db
      POSTGRES_PASSWORD: 1234
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce
  
  user-service:
    image: anfim/ecommerce-users:v1.1
    ports:
      - "9090:9090"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: ecommerce
      POSTGRES_USERNAME: db
      POSTGRES_PASSWORD: 1234
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce

  order-service:
    image: anfim/ecommerce-orders:v1.0
    ports:
      - "7070:7070"
    environment:
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MONGODB_DATABASE: OrdersDatabase
      UsersMicroserviceName: user-service
      UsersMicroservicePort: 9090
    networks:
        - ecommerce

networks:
  ecommerce:
    driver: bridge