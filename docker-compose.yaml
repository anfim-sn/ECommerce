version: '3.8'
name: ecommerse
services:
  postgres:
    image: postgres:15.6
    ports:
      - "5432:5432"
    volumes:
      - ./local/postgresql:/var/lib/postgresql/data
      - ./local/postgresql/init:/docker-entrypoint-initdb.d
    environment:
      PGDATA: /var/lib/postgresql/data/ecommerse/
      POSTGRES_DB: ecommerse
      POSTGRES_USER: db
      POSTGRES_PASSWORD: 1234
    networks:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db -d ecommerse" ]
      interval: 5s
      timeout: 5s
      retries: 5
  
  product-service:
    image: product-service:v1.0
    build:
      context: ./src/ECommerce.ProductService
      dockerfile: ECommerce.Api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      ConnectionStrings__PostgreSQLConnection: "Host=postgres;Port=5432;Database=ecommerse;Username=db;Password=1234"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres
  
  user-service:
    image: user-service:v1.0
    build:
      context: ./src/ECommerce.UserService
      dockerfile: ECommerce.Api/Dockerfile
    ports:
      - "8081:8080"
    environment:
      ConnectionStrings__PostgreSQLConnection: "Host=postgres;Port=5432;Database=ecommerse;Username=db;Password=1234"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - postgres

networks:
  postgres:
    driver: bridge